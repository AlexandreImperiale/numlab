API details
-----------

  * naming conventions:
    namespaces: first lowercase
    class: first uppercase
    methods: first lowercase
        example: ns0::ns1::MyClass::getName

  * root namespace: nl::

Architecture tools
------------------

Definition of
  * Data: move only
  * View: const T*
  * Mutable: T*

To any data set MyDataSet, we impose the following restrictions:
  * MyDataSet is a class with private fields only,
  * MyDataSetImpl is a class with static member functions with Mutable<MyDataSet> as first input,
  * MyDataSetTools is a class with static member functions with View<MyDataSet> as first input.

use struct for regrouping types and enum for switching using tag dispatch pattern.

Functionality groups
--------------------

Core / nl::core

Linear algebra / nl::linAlg

Geometry / nl::geom

Numerical integration / nl::numInt

Signal processing / nl::sigProc

Functionality levels
--------------------

L0:
  * nl::core
      - nl::Real, nl::Reals, nl::Complex, nl::Complexes
      - Generic parallel loops ?,

  * nl::linAlg
      - Initialization of vectors,
      - Outputs of long vectors into stream,

  * nl::geom
      - Data definition of coordinates, points, vectors and directions in 2D & 3D,
      - mesh 1D -> needed for nl::sigProc::signal

  * nl::numInt
      - Data definition of 1D quadrature rules

  * nl::sigProc
      - Data definition of temporal signals -> needs nl::Reals, nl::geom::Mesh1D
